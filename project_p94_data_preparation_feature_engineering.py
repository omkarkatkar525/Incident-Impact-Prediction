# -*- coding: utf-8 -*-
"""Project_P94_Data_Preparation_Feature_Engineering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-S5rniDU0-uRpuc3IRscill-9kAdmxC-

## Data Preparation
"""

incident_data.reset_index(inplace=True)

y=incident_data['impact']
y

X=incident_data.drop(columns='impact')
X

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.2, random_state=23)
X_train.shape, X_test.shape, y_train.shape, y_test.shape

"""## Feature Engineering

### Feature selection using Chi-Square used only for the Categorical data
"""

from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2

ordered_rank_feature=SelectKBest(score_func=chi2,k=24)
ordered_feature=ordered_rank_feature.fit(X_train,y_train)
ordered_feature

df_scores=pd.DataFrame(ordered_feature.scores_,columns=['scores'])
df_columns=pd.DataFrame(X_train.columns)
features_rank=pd.concat([df_scores,df_columns],axis=1)
features_rank.nlargest(10,'scores')

ranked_features=pd.Series(ordered_feature.scores_,index=X_train.columns)
ranked_features.nlargest(10).plot(kind='barh')
plt.show()
ranked_features.nlargest(10)

"""# Feature selection using ExtraTreeClassifier"""

from sklearn.ensemble import ExtraTreesClassifier
import matplotlib.pyplot as plt
model = ExtraTreesClassifier()
model.fit(X_train,y_train)

model.feature_importances_

ranked_features=pd.Series(model.feature_importances_,index=X_train.columns)
ranked_features.nlargest(10).plot(kind='barh')
plt.show()
ranked_features.nlargest(10)

"""# Feature selection using DecisionTreeClassifier"""

from sklearn.tree import DecisionTreeClassifier

DT_class = DecisionTreeClassifier()
DT_class.fit(X_train,y_train)

DT_class.feature_importances_

ranked_features=pd.Series(DT_class.feature_importances_,index=X_train.columns)
ranked_features.nlargest(10).plot(kind='barh')
plt.show()
ranked_features.nlargest(10)

"""# Feature Selection using Mutual information"""

from sklearn.feature_selection import mutual_info_classif
mutual_info = mutual_info_classif(X_train, y_train)
mutual_info

ranked_features=pd.Series(mutual_info,index=X_train.columns)
ranked_features.nlargest(10).plot(kind='barh')
plt.show()
ranked_features.nlargest(10)

"""## Selected the important Features which are obtained from the Feature Selection Process.(Select the Features having more impact on dependent variable.)"""

X=incident_data[['priority','urgency','index','number','opened_by','resolved_by','assigned_to','category','knowledge','location','u_priority_confirmation','reassignment_count']]
X

X.info()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.2, random_state=23)
X_train.shape, X_test.shape, y_train.shape, y_test.shape